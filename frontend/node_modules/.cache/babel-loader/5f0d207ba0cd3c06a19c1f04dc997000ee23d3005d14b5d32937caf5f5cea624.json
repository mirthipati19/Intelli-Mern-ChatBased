{"ast":null,"code":"var _jsxFileName = \"/Users/murarimirthipati/Desktop/Personal/MERN-CHAT-APP/frontend/src/components/MyChats.js\",\n  _s = $RefreshSig$();\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Stack, Text } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = ({\n  fetchAgain\n}) => {\n  _s();\n  const [loggedUser, setLoggedUser] = useState();\n  const [chats, setChats] = useState([]);\n  const {\n    selectedChat,\n    setSelectedChat,\n    user\n  } = ChatState();\n  const toast = useToast();\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occurred!\",\n        description: \"Failed to load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, [fetchAgain]);\n  const handleChatSelection = chat => {\n    setSelectedChat(chat);\n    console.log(\"Selected Chat:\", chat); // Log selected chat to console\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    d: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      d: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"My Chats\", /*#__PURE__*/_jsxDEV(GroupChatModal, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          d: \"flex\",\n          fontSize: {\n            base: \"17px\",\n            md: \"10px\",\n            lg: \"17px\"\n          },\n          rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 24\n          }, this),\n          children: \"New Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"#F8F8F8\",\n      w: \"100%\",\n      h: \"100%\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\",\n      children: chats.length ? /*#__PURE__*/_jsxDEV(Stack, {\n        overflowY: \"scroll\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => handleChatSelection(chat),\n          cursor: \"pointer\",\n          bg: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n          color: selectedChat === chat ? \"white\" : \"black\",\n          px: 3,\n          py: 2,\n          borderRadius: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), chat.latestMessage && /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [chat.latestMessage.sender.name, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this), \" \", chat.latestMessage.content.length > 50 ? chat.latestMessage.content.substring(0, 51) + \"...\" : chat.latestMessage.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this)]\n        }, chat._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChats, \"y/ZZUdLNOS2O+nG6ALoxj4knKvg=\", false, function () {\n  return [useToast];\n});\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["AddIcon","Box","Button","Stack","Text","axios","useEffect","useState","getSender","ChatLoading","GroupChatModal","ChatState","useToast","jsxDEV","_jsxDEV","MyChats","fetchAgain","_s","loggedUser","setLoggedUser","chats","setChats","selectedChat","setSelectedChat","user","toast","fetchChats","config","headers","Authorization","token","data","get","error","title","description","status","duration","isClosable","position","JSON","parse","localStorage","getItem","handleChatSelection","chat","console","log","d","base","md","flexDir","alignItems","p","bg","w","borderRadius","borderWidth","children","pb","px","fontSize","fontFamily","justifyContent","lg","rightIcon","fileName","_jsxFileName","lineNumber","columnNumber","h","overflowY","length","map","onClick","cursor","color","py","isGroupChat","users","chatName","latestMessage","sender","name","content","substring","_id","_c","$RefreshReg$"],"sources":["/Users/murarimirthipati/Desktop/Personal/MERN-CHAT-APP/frontend/src/components/MyChats.js"],"sourcesContent":["import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Stack, Text } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { useToast } from \"@chakra-ui/react\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n  const [chats, setChats] = useState([]);\n  const { selectedChat, setSelectedChat, user } = ChatState();\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occurred!\",\n        description: \"Failed to load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, [fetchAgain]);\n\n  const handleChatSelection = (chat) => {\n    setSelectedChat(chat);\n    console.log(\"Selected Chat:\", chat); // Log selected chat to console\n  };\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats.length ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                key={chat._id}\n                onClick={() => handleChatSelection(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name}:</b>{\" \"}\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}