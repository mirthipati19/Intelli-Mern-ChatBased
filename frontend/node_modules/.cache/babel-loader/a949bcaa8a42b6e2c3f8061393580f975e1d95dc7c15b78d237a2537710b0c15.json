{"ast":null,"code":"import{FormControl}from\"@chakra-ui/form-control\";import{Input}from\"@chakra-ui/input\";import{Box,Text}from\"@chakra-ui/layout\";import\"./styles.css\";import{IconButton,Spinner,useToast}from\"@chakra-ui/react\";import{getSender,getSenderFull}from\"../config/ChatLogics\";import{useEffect,useState}from\"react\";import axios from\"axios\";import{ArrowBackIcon}from\"@chakra-ui/icons\";import ProfileModal from\"./miscellaneous/ProfileModal\";import ScrollableChat from\"./ScrollableChat\";import Lottie from\"react-lottie\";import animationData from\"../animations/typing.json\";import io from\"socket.io-client\";import UpdateGroupChatModal from\"./miscellaneous/UpdateGroupChatModal\";import{ChatState}from\"../Context/ChatProvider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ENDPOINT=\"http://localhost:8080\";// \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket,selectedChatCompare;const SingleChat=_ref=>{let{fetchAgain,setFetchAgain}=_ref;const[messages,setMessages]=useState([]);const[loading,setLoading]=useState(false);const[newMessage,setNewMessage]=useState(\"\");const[socketConnected,setSocketConnected]=useState(false);const[typing,setTyping]=useState(false);const[istyping,setIsTyping]=useState(false);const toast=useToast();const defaultOptions={loop:true,autoplay:true,animationData:animationData,rendererSettings:{preserveAspectRatio:\"xMidYMid slice\"}};const{selectedChat,setSelectedChat,user,notification,setNotification}=ChatState();const fetchMessages=async()=>{if(!selectedChat)return;try{const config={headers:{Authorization:\"Bearer \".concat(user.token)}};setLoading(true);const{data}=await axios.get(\"/api/message/\".concat(selectedChat._id),config);setMessages(data);setLoading(false);socket.emit(\"join chat\",selectedChat._id);}catch(error){toast({title:\"Error Occured!\",description:\"Failed to Load the Messages\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});}};const sendMessage=async event=>{if(event.key===\"Enter\"&&newMessage){socket.emit(\"stop typing\",selectedChat._id);try{const config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};setNewMessage(\"\");const{data}=await axios.post(\"/api/message\",{content:newMessage,chatId:selectedChat},config);socket.emit(\"new message\",data);setMessages([...messages,data]);}catch(error){toast({title:\"Error Occured!\",description:\"Failed to send the Message\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});}}};useEffect(()=>{socket=io(ENDPOINT);socket.emit(\"setup\",user);socket.on(\"connected\",()=>setSocketConnected(true));socket.on(\"typing\",()=>setIsTyping(true));socket.on(\"stop typing\",()=>setIsTyping(false));// eslint-disable-next-line\n},[]);useEffect(()=>{fetchMessages();selectedChatCompare=selectedChat;// eslint-disable-next-line\n},[selectedChat]);console.log(messages);useEffect(()=>{socket.on(\"message recieved\",newMessageRecieved=>{if(!selectedChatCompare||// if chat is not selected or doesn't match current chat\nselectedChatCompare._id!==newMessageRecieved.chat._id){if(!notification.includes(newMessageRecieved)){setNotification([newMessageRecieved,...notification]);setFetchAgain(!fetchAgain);}}else{setMessages([...messages,newMessageRecieved]);}});});const typingHandler=e=>{setNewMessage(e.target.value);if(!socketConnected)return;if(!typing){setTyping(true);socket.emit(\"typing\",selectedChat._id);}let lastTypingTime=new Date().getTime();var timerLength=3000;setTimeout(()=>{var timeNow=new Date().getTime();var timeDiff=timeNow-lastTypingTime;if(timeDiff>=timerLength&&typing){socket.emit(\"stop typing\",selectedChat._id);setTyping(false);}},timerLength);};return/*#__PURE__*/_jsx(_Fragment,{children:selectedChat?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:{base:\"28px\",md:\"30px\"},pb:3,px:2,w:\"100%\",fontFamily:\"Work sans\",d:\"flex\",justifyContent:{base:\"space-between\"},alignItems:\"center\",children:[/*#__PURE__*/_jsx(IconButton,{d:{base:\"flex\",md:\"none\"},icon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),onClick:()=>setSelectedChat(\"\")}),messages&&(!selectedChat.isGroupChat?/*#__PURE__*/_jsxs(_Fragment,{children:[getSender(user,selectedChat.users),/*#__PURE__*/_jsx(ProfileModal,{user:getSenderFull(user,selectedChat.users)})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[selectedChat.chatName.toUpperCase(),/*#__PURE__*/_jsx(UpdateGroupChatModal,{fetchMessages:fetchMessages,fetchAgain:fetchAgain,setFetchAgain:setFetchAgain})]}))]}),/*#__PURE__*/_jsxs(Box,{d:\"flex\",flexDir:\"column\",justifyContent:\"flex-end\",p:3,bg:\"#E8E8E8\",w:\"100%\",h:\"100%\",borderRadius:\"lg\",overflowY:\"hidden\",children:[loading?/*#__PURE__*/_jsx(Spinner,{size:\"xl\",w:20,h:20,alignSelf:\"center\",margin:\"auto\"}):/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:/*#__PURE__*/_jsx(ScrollableChat,{messages:messages})}),/*#__PURE__*/_jsxs(FormControl,{onKeyDown:sendMessage,id:\"first-name\",isRequired:true,mt:3,children:[istyping?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Lottie,{options:defaultOptions// height={50}\n,width:70,style:{marginBottom:15,marginLeft:0}})}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(Input,{variant:\"filled\",bg:\"#E0E0E0\",placeholder:\"Enter a message..\",value:newMessage,onChange:typingHandler})]})]})]}):/*#__PURE__*/ // to get socket.io on same page\n_jsx(Box,{d:\"flex\",alignItems:\"center\",justifyContent:\"center\",h:\"100%\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"3xl\",pb:3,fontFamily:\"Work sans\",children:\"Click on a user to start chatting\"})})});};export default SingleChat;","map":{"version":3,"names":["FormControl","Input","Box","Text","IconButton","Spinner","useToast","getSender","getSenderFull","useEffect","useState","axios","ArrowBackIcon","ProfileModal","ScrollableChat","Lottie","animationData","io","UpdateGroupChatModal","ChatState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ENDPOINT","socket","selectedChatCompare","SingleChat","_ref","fetchAgain","setFetchAgain","messages","setMessages","loading","setLoading","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","selectedChat","setSelectedChat","user","notification","setNotification","fetchMessages","config","headers","Authorization","concat","token","data","get","_id","emit","error","title","description","status","duration","isClosable","position","sendMessage","event","key","post","content","chatId","on","console","log","newMessageRecieved","chat","includes","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","children","fontSize","base","md","pb","px","w","fontFamily","d","justifyContent","alignItems","icon","onClick","isGroupChat","users","chatName","toUpperCase","flexDir","p","bg","h","borderRadius","overflowY","size","alignSelf","margin","className","onKeyDown","id","isRequired","mt","options","width","style","marginBottom","marginLeft","variant","placeholder","onChange"],"sources":["/Users/murarimirthipati/Desktop/Personal/MERN-CHAT-APP/frontend/src/components/SingleChat.js"],"sourcesContent":["import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"http://localhost:8080\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n\n        \n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\nconsole.log(messages);\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}